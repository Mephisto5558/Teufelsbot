{
  "categoryName": "Propriétaire uniquement",
  "categoryDescription": "Commandes qui ne devraient être disponibles que pour le développeur",
  "blacklistuser": {
    "description": "empêche un utilisateur d'utiliser le bot",
    "usage": {
      "usage": "[off] <user id>"
    },
    "notFound": "Aucune entrée trouvée pour cet identifiant.",
    "saved": "`{user}` a été exclu de l'utilisation du bot.",
    "removed": "L'entrée de la liste noire pour `{user}` a été supprimée.",
    "cantBlacklistOwner": "Je ne peux pas blacklister le propriétaire du bot!"
  },
  "dbget": {
    "description": "interroger les données de la base de données",
    "usage": {
      "usage": "<database name> <key>",
      "examples": "base de données a.b.c"
    },
    "notFound": "rien trouvé"
  },
  "eval": {
    "description": "injecter du code JavaScript directement dans le bot",
    "usage": {
      "usage": "<js code>",
      "examples": "console.log('Hello World!')"
    },
    "finished": "commande évaluée :\n```js\n{code}\n```\n",
    "success": "{msg} sans erreurs.",
    "emptyRejection": "Rejet de promesse vide",
    "error": "{msg} avec l'erreur suivante:\n```\n{name}: {err}\n```"
  },
  "exec": {
    "description": "injecter du code Bash directement dans le shell du bot",
    "usage": {
      "usage": "<sh code>",
      "examples": "echo 'Bonjour le monde!'"
    },
    "finished": "Code Bash :\n```sh\n{code}\n```\n",
    "stdout": "{msg} avec la sortie suivante:\nstdout:\n```\n{stdout}\n```\n",
    "stderr": "stderr:\n```\n{stderr}\n```",
    "error": "{msg} avec l'erreur suivante:\n```\n{name}: {err}\n```"
  },
  "reload": {
    "description": "recharge un fichier ou une catégorie",
    "usage": {
      "usage": "<'command' | 'file'> <Path relative to cwd>\n{prefix}{cmdName} <command | '*'>",
      "examples": "chemin/vers/fichier\n{prefix}{cmdName} amusant"
    },
    "invalidCommand": "Ce n'est pas une commande valide.",
    "invalidPath": "Le chemin spécifié n'existe pas ! Veuillez noter la sensibilité à la casse du chemin.",
    "error": "Une erreur est survenue lors du rechargement :\n```{error}```\nVérifiez la console pour plus d'informations.",
    "noneReloaded": "Aucune commande n'a été rechargée.",
    "reloaded": "Les commandes suivantes `{count}` ont été rechargées:\n{commands}"
  },
  "reloadconfig": {
    "description": "Recharge le fichier config.json",
    "error": "Une erreur est survenue lors du rechargement de la configuration :\n{err}",
    "success": "Configuration rechargée."
  },
  "reloaddb": {
    "description": "Recharge la base de données",
    "success": "Rechargé la db."
  },
  "reloadlang": {
    "description": "Recharge tous les fichiers de langue",
    "success": "Rechargé tous les fichiers de langue."
  },
  "restart": {
    "description": "Redémarre le bot",
    "alreadyRestarting": "Le bot effectue déjà un redémarrage, veuillez attendre qu'il se termine. Message : {url}",
    "updatingNPM": "<:loading:1265274270645354577> Redémarrage du bot...\nInstallation des paquets...",
    "updateNPMError": "❌ Le redémarrage a échoué en raison d'une erreur du Musée national du Palais. Consultez la console pour plus d'informations.",
    "restarting": "<:loading:1265274270645354577> Redémarrage du bot...\nDémarrage du processus de nœud...",
    "restartingError": "❌ Le redémarrage a échoué en raison d'une erreur de nœud. Consultez la console pour plus d'informations.",
    "success": "Redémarré avec succès."
  },
  "setactivity": {
    "description": "Définit l'activité du bot",
    "usage": {
      "usage": "<activity>;[type]",
      "examples": "commandes en cours d'exécution;lecture"
    },
    "invalidType": "Ce n'est pas un type valide. Les types valides sont:\n`{types}`",
    "set": "Activité définie à `{name}` de type `{type}`.",
    "reset": "Activité définie à `aucun`."
  },
  "setchangelog": {
    "description": "Met à jour les changelogs pour que les utilisateurs soient à jour.",
    "success": "Le changelog a été mis à jour avec succès."
  },
  "setcountingnumber": {
    "description": "Met à jour le dernier numéro de comptage d'un canal, réinitialise également le dernier auteur.",
    "usage": {
      "usage": "[number (défaut 0)] [channel]",
      "examples": "7 #counting-channel"
    },
    "invalidNumber": "Le numéro fourni est invalide !",
    "unknownChannel": "L'identifiant de salon fourni n'a pas été trouvé dans cette guilde !",
    "success": "Le comptage pour <#{channel}> a été défini à **{number}**."
  },
  "test": {
    "description": "tester des trucs"
  }
}