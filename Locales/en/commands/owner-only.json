{
  "categoryDescription": "Commands that should be available only to the dev",
  "blacklistuser": {
    "description": "blocks an user from using the bot",
    "usage": {
      "usage": "{prefix}blacklistuser [off] <user id>",
      "examples": "{prefix}blacklistuser 12345678901234568"
    },
    "noInput": "You need to provide an id.",
    "notFound": "Found no entry for this id.",
    "saved": "`{user}` has been blacklisted from using the bot.",
    "removed": "The blacklist entry for `{user}` has been removed.",
    "cantBlacklistOwner": "I can't blacklist the owner of the bot!"
  },
  "dbget": {
    "description": "query data from the database",
    "usage": {
      "usage": "{prefix}dbget <database name> <key>",
      "examples": "{prefix}dbget database a.b.c"
    },
    "notFound": "nothing found"
  },
  "eval": {
    "description": "inject JavaScript code directly into the bot",
    "usage": {
      "usage": "{prefix}eval <js code>",
      "examples": "{prefix}eval console.log('Hello World!')"
    },
    "finished": "evaluated command:\n```js\n{code}\n```\n",
    "success": "{msg} without errors.",
    "error": "{msg} with the following error:\n```\n{name}: {err}\n```"
  },
  "gitpull": {
    "description": "Run a git pull",
    "success": "Successfully executed the command."
  },
  "reload": {
    "description": "reloads a file or category",
    "usage": {
      "usage": "{prefix}reload <\"command\" | \"file\"> <Path relative to cwd>\n{prefix}reload <command | \"*\">",
      "examples": "{prefix}reload file path/to/file\n{prefix}reload fun"
    },
    "invalidCommand": "This is not a valid command.",
    "invalidPath": "The specified path does not exist! Please note the case sensitivity of the path.",
    "error": "An error occurred while reloading:\n```{error}```\nCheck the console for more information.",
    "noneReloaded": "No commands have been reloaded.",
    "reloaded": "The following `{count}` command(s) has/have been reloaded:\n{commands}"
  },
  "reloaddb": {
    "description": "Reloads the database",
    "success": "Reloaded the db."
  },
  "reloadlang": {
    "description": "Reloads all language files",
    "success": "Reloaded all language files."
  },
  "restart": {
    "description": "Restarts the bot",
    "alreadyRestarting": "The bot is already performing a restart, please wait for it to finish. Message: {url}",
    "updatingNPM": "<a:loading:1063091916683612160> Restarting bot...\nInstalling packages...",
    "updateNPMError": "❌ Restart failed due to an NPM error. Check the console for more information.",
    "restarting": "<a:loading:1063091916683612160> Restarting bot...\nStarting node process...",
    "restartingError": "❌ Restart failed due to the an Node error. Check the console for more information.",
    "success": "✅ Successfully restarted."
  },
  "setactivity": {
    "description": "Sets the bot's activity",
    "usage": {
      "usage": "{prefix}setactivity <activity>;[type]",
      "examples": "{prefix}setactivity running commands;playing"
    },
    "invalidType": "This is not a valid type. Valid types are:\n`{types}`",
    "set": "Activity set to `{name}` of type `{type}`.",
    "reset": "Activity set to `none`."
  },
  "setchangelog": {
    "description": "Updates the changelogs so users are up-to-date.",
    "success": "The changelog has been updated successfully."
  },
  "test": {
    "description": "testing stuff"
  }
}