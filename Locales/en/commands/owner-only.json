{
  "blacklistuser": {
    "description": "blocks an user from using the bot",
    "usage": "PREFIX Command: blacklistuser <user id>",
    "noInput": "You need to provide an id.",
    "notFound": "Found no entry for this id.",
    "saved": "`{user}` has been blacklisted from using the bot.",
    "removed": "The blacklist entry for `{user}` has been removed.",
    "cantBlacklistOwner": "I can't blacklist the owner of the bot!"
  },
  "dbget": {
    "description": "query data from the database",
    "usage": "PREFIX Command: dbget <database name>",
    "notFound": "nothing found"
  },
  "eval": {
    "description": "inject JavaScript code directly into the bot",
    "usage": "PREFIX Command: eval <js code>",
    "finished": "evaluated command:\n```js\n{code}\n```\n",
    "success": "{msg} without errors.",
    "error": "{msg} with the following error:\n```\n{name}: {err}\n```"
  },
  "gitpull": {
    "description": "Run a git pull",
    "success": "Successfully executed the command."
  },
  "globalsync": {
    "description": "syncs the bot's slash commands with all guilds",
    "success": "Finished Syncing."
  },
  "reload": {
    "description": "reloads a file or category",
    "usage": "PREFIX Command: reload <command | \"*\">",
    "invalidCommand": "This is not a valid command.",
    "noneReloaded": "No commands have been reloaded.",
    "reloaded": "The following `{count}` command(s) has/have been reloaded:\n`{commands}"
  },
  "reloaddb": {
    "description": "Reloads the database",
    "success": "Reloaded the db."
  },
  "reloadlang": {
    "description": "Reloads all language files",
    "success": "Reloaded all language files."
  },
  "restart": {
    "description": "Restarts the bot",
    "message": "Restarting bot..."
  },
  "setactivity": {
    "description": "Sets the bot's activity",
    "usage": "PREFIX Command: setactivity <activity>;[type]",
    "invalidType": "This is not a valid type. Valid types are:\n`{types}`",
    "set": "Activity set to `{name}` of type `{type}`.",
    "reset": "Activity set to `none`."
  },
  "test": {
    "description": "testing stuff"
  }
}