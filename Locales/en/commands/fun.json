{
  "8ball": {
    "description": "Ask me a question",
    "options": {
      "question": {
        "description": "What do you want my opinion on?"
      }
    },
    "noQuestion": "You didn't ask me anything??"
  },
  "afk": {
    "description": "sends an afk message if you get pinged until you write again"
  },
  "birthday": {
    "description": "save your birthday and I will send a message on your birthday",
    "options": {
      "set": {
        "description": "set your own birthday",
        "options": {
          "day": {
            "description": "The day you was born in."
          },
          "month": {
            "description": "The month you was born in."
          },
          "year": {
            "description": "The year you was born in."
          }
        }
      },
      "get": {
        "description": "get a list of the next birthdays",
        "options": {
          "target": {
            "description": "whose birthday do you want to get? Leave this empty to get the next 10 birthdays."
          },
          "do_not_hide": {
            "description": "don't hide my response to other users"
          }
        }
      },
      "remove": {
        "description": "deletes your birthday from the database"
      }
    },
    "months": {
      "January": "January",
      "February": "February",
      "March": "March",
      "April": "April",
      "May": "May",
      "June": "June",
      "July": "July",
      "August": "August",
      "September": "September",
      "October": "October",
      "November": "November",
      "December": "December"
    },
    "saved": "Your Birthday has been saved.",
    "removed": "Your birthday has been removed.",
    "getUser": {
      "notFound": "This user has no birthday :(",
      "embedTitle": "%s's Birthday",
      "date": "This user has birthday on **{month} {day}**.\n",
      "newAge": "He/she will turn **%d** on this day."
    },
    "getAll": {
      "embedTitle": "The next birthdays",
      "date": "**{month} {day}**\n",
      "notFound": "Nobody has a birthday set..."
    }
  },
  "dm": {
    "description": "sends a user a dm",
    "options": {
      "toggle": {
        "description": "toggles the ability to send you user-made dms",
        "options": {
          "target": {
            "description": "the user you want to toggle, leave this empty to toggle all users (\"*\")."
          }
        }
      },
      "blacklist": {
        "description": "lists all users you are currently blocking."
      },
      "send": {
        "description": "send a dm to a member of this guild",
        "options": {
          "target": {
            "description": "the user you want to send a dm to"
          },
          "message": {
            "description": "the message you want to send, /n for newline"
          },
          "as_mod": {
            "description": "shows 'a mod of %s' instead of your name"
          }
        }
      }
    },
    "toggle": {
      "targetAll": {
        "saved": "no one will be",
        "removed": "`all users`"
      },
      "targetOne": {
        "name": "user `%s`",
        "isnt": "%s isn't"
      },
      "saved": "Your blacklist entry for %s has been saved.\nNow %s able to send you dms by me.\nThis will not prevent guild moderators from sending dms to you.",
      "removed": "Your blacklist entry for %s has been removed.\nYou can now receive dms created by %s from me."
    },
    "blacklist": {
      "notFound": "> You are not blocking any users on this guild.",
      "allBlocked": "> You are blocking all users.",
      "embedTitle": "Your blacklist for the `/dm send` command",
      "embedDescription": "You are blocking the following guild members:\n%s",
      "embedFooterText": "run '/dm toggle' without arguments to toggle all users and\nrun '/dm toggle' with the 'user_to_toggle' argument to toggle a specific user."
    },
    "send": {
      "targetIsMe": "I cannot send DMs to myself!",
      "permissionDenied": "You are not allowed to send dms to that user!",
      "asModInfo": "\nUse the `as_mod` option to force the message to send.",
      "embedTitle": "You got a message",
      "embedDescription": "From ***%s**\nGuild: %s\n\n%s",
      "fromMod": "a guild moderator",
      "embedFooterText": "If you don't want to receive user-made dms from me, run '/dm toggle' in any guild.",
      "error": "I couldn't message this member!"
    }
  },
  "fact": {
    "description": "get some facts"
  },
  "giveaway": {
    "description": "Giveaway commands",
    "options": {
      "create": {
        "description": "Create a new giveaway",
        "options": {
          "prize": {
            "description": "The prize you are giving away"
          },
          "description": {
            "description": "The giveaway embed description"
          },
          "channel": {
            "description": "The channel this giveaway should get created in"
          },
          "duration": {
            "description": "The giveaway duration: eg. 1w3d2h5min"
          },
          "winner_count": {
            "description": "The number of winners"
          },
          "reaction": {
            "description": "The emoji users have to react with to participate"
          },
          "thumbnail": {
            "description": "The thumbnail url to use"
          },
          "image": {
            "description": "The image url to use"
          },
          "exempt_members": {
            "description": "A list of members who are not allowed to participate."
          },
          "required_roles": {
            "description": "Only members with one of this roles will be able to participate."
          },
          "bonus_entries": {
            "description": "A list of member/role mentions with the amount of bonus entries: eg. @Premium:5 @Normal:2"
          },
          "embed_color": {
            "description": "The hex color of the embed while the giveaway is running."
          },
          "embed_color_end": {
            "description": "The hex color of the embed after the giveaway has ended."
          }
        }
      },
      "end": {
        "description": "End a running giveaway",
        "options": {
          "id": {
            "description": "The id of the giveaway embed"
          }
        }
      },
      "edit": {
        "description": "Edit a running giveaway",
        "options": {
          "id": {
            "description": "The id of the giveaway embed"
          },
          "add_time": {
            "description": "The number of time added to the giveaway duration. eg. 2h12min or -1h10min"
          },
          "winner_count": {
            "description": "The new number of winners"
          },
          "prize": {
            "description": "The new prize you are giving away"
          },
          "thumbnail": {
            "description": "The new thumbnail url to use"
          },
          "image": {
            "description": "The new image url to use"
          },
          "exempt_members": {
            "description": "Members who are not allowed to participate"
          },
          "required_roles": {
            "description": "Only members with one of this roles will be able to participate."
          }
        }
      },
      "reroll": {
        "description": "Reroll a ended giveaway",
        "options": {
          "id": {
            "description": "The id of the giveaway embed"
          }
        }
      }
    },
    "notFound": "Your provided message id is not a valid giveaway!",
    "notHost": "You are not the host of this giveaway!",
    "buttonLabel": "View Giveaway",
    "started": "The giveaway has started!",
    "ended": "The giveaway has been ended!",
    "edited": "The giveaway has been edited!",
    "rerolled": "The giveaway has been rerolled!",
    "newGiveaway": "ðŸŽ‰ðŸŽ‰ **GIVEAWAY** ðŸŽ‰ðŸŽ‰",
    "giveawayEnded": "'ðŸŽ‰ðŸŽ‰ **GIVEAWAY ENDED** ðŸŽ‰ðŸŽ‰",
    "inviteToParticipate": "React with %s to participate!",
    "winMessage": "Congratulations, {winners}! You won **{this.prize}**!",
    "drawing": "Drawing: {timestamp}",
    "dropMessage": "Be the first to react with %s!",
    "embedFooterText": "{this.winnerCount} winner(s)",
    "noWinner": "Giveaway cancelled, no valid participations.",
    "winners": "Winner(s):",
    "rerollWinners": "ðŸŽ‰ New winner(s): {winners}! Congratulations, you won **{this.prize}**!",
    "rerollNoWinner": "No valid participations, no new winner(s) can be chosen!",
    "endedAt": "Ended at",
    "hostedBy": "Hosted by: {this.hostedBy}"
  },
  "happy": {
    "description": "make the bot send a happy message"
  },
  "hash": {
    "description": "encrypt or decrypt your text with various methods",
    "usage": "SLASH Command: You only need to provide one method option.",
    "options": {
      "input": {
        "description": "the text you want to encrypt or decrypt"
      },
      "method": {
        "description": "with which method your text should get encrypted (needed only once)"
      }
    },
    "noMethod": "You need to provide one of the method options!",
    "embedTitle": "Hash Function",
    "embedDescription": "Your input: `%s`\nHash method: `%s`",
    "text": "Your hashed string:\n`%s`"
  },
  "image": {
    "description": "Image manipulation",
    "usage": "PREFIX Command: image <subcommand | \"help\"> <args>",
    "options": {
      "type": {
        "description": "The type you want to use. leave this empty to get al list of types."
      }
    },
    "notFound": "This is not a valid option. ",
    "validOptions": "Valid options are:\n`%s`",
    "requiresArgs": "This command requires the following args in order:\n\n%s",
    "error": "An error occurred:\n```%s```"
  },
  "joke": {
    "description": "sends a funny joke",
    "usage": "PREFIX Command: joke [type]",
    "options": {
      "type": {
        "description": "The type/tag of the joke (not all APIList support this)"
      },
      "blacklist": {
        "description": "blacklist specific types/tags",
        "choices": {
          "nsfw": "NSFW",
          "religious": "religious",
          "political": "political",
          "racist": "racist",
          "sexist": "sexist",
          "explicit": "explicit"
        }
      },
      "max_length": {
        "description": "the max length of the joke (not all APIList support this)"
      }
    },
    "noAPIAvailable": "Apparently, there is currently no API available. Please try again later.",
    "embedTitle": "Is this funny?"
  },
  "reddit": {
    "description": "reddit related commands",
    "usage": "PREFIX Command: reddit [subreddit] [sort type]",
    "options": {
      "meme": {
        "description": "get a random meme",
        "options": {
          "filter_nsfw": {
            "description": "filter all posts tagged as nsfw. Default: true, Enforced on non-nsfw channels"
          }
        }
      },
      "subreddit": {
        "description": "get one of the top posts of a subreddit",
        "options": {
          "subreddit": {
            "description": "the subreddit name you want to get posts from. Defaults to a random meme sub."
          },
          "type": {
            "description": "The type to sort for. Default: hot"
          },
          "filter_nsfw": {
            "description": "filter all posts tagged as nsfw. Default: true, Enforced on non-nsfw channels"
          }
        }
      }
    },
    "error": "An error occurred:\n```%s```",
    "notFound": "No posts matched your search."
  },
  "sad": {
    "description": "sends a sad emojicon"
  },
  "say": {
    "description": "Let me say something",
    "usage": "PREFIX Command: say <msg> [channel]",
    "options": {
      "msg": {
        "description": "Type your message here, /n for new line"
      },
      "channel": {
        "description": "The channel the message gets sent to"
      }
    },
    "noMsgProvided": "You need to provide a message to send!"
  },
  "sleep": {
    "description": "tells your friends that you are going to sleep",
    "responseList": [
      "is tired and goes now to sleep :3",
      "goes now to bed <:engelchen:725458214044303371>",
      "sleeps now, hopefully he/she doesn't snores <:gucken:725670318164672543>"
    ]
  },
  "trigger": {
    "description": "Manage custom responses to message triggers",
    "options": {
      "add": {
        "description": "Add a new trigger",
        "options": {
          "trigger": {
            "description": "the text you want the bot to respond to"
          },
          "response": {
            "description": "the response the bot should send"
          },
          "wildcard": {
            "description": "look for the trigger anywhere in the message (default: true)"
          }
        }
      },
      "delete": {
        "description": "Delete a trigger. This is irreversible!",
        "options": {
          "id": {
            "description": "The trigger id, can be found using \"/trigger get\". Leave this empty to delete the last one."
          }
        }
      },
      "clear": {
        "description": "Delete all triggers. This is irreversible!",
        "options": {
          "confirmation": {
            "description": "Write \"CLEAR ALL\" to confirm the deletion of ALL TRIGGERS."
          }
        }
      },
      "get": {
        "description": "Get one or all triggers",
        "options": {
          "query": {
            "description": "search for a trigger by its trigger content."
          },
          "id": {
            "description": "the trigger id, can be found using \"/trigger get\""
          },
          "short": {
            "description": "return as many triggers as possible"
          }
        }
      }
    },
    "saved": "Added new trigger for `%s`.",
    "idNotFound": "There is not trigger with that ID!",
    "deletedOne": "Deleted the trigger with the ID `%s`",
    "deletedAll": "I deleted all (`%d`) triggers.",
    "noneFound": "There are no triggers!",
    "notFound": "No trigger matched your query.",
    "needConfirm": "You need to confirm this action by writing `CLEAR ALL` in the confirm option!",
    "embedTitle": "Triggers",
    "fieldName": "**Trigger %d:**",
    "fieldValue": "```\n%s\n```\n**Response:**\n```\n%s\n```\n**Wildcard:**`%s`",
    "longEmbedDescription": "ID: %d\n> Trigger: `%s`\n> Response: `%s`\n> Wildcard: `%s`\n\n",
    "shortFieldName": "ID %d",
    "shortFieldValue": "**Trigger:**\n```\n%s\n```\n**Response:**\n```\n%s\n```\n**Wildcard:**`%s`\n",
    "first25": "The first 25 triggers. Get more with the `short` option."
  },
  "wiki": {
    "description": "Search for something on Wikipedia, or get a random page if no search terms were specified.",
    "usage": "wiki <search terms>",
    "options": {
      "query": {
        "description": "What you you want to search?"
      }
    },
    "notFound": "No results found for `%s`.",
    "visitWiki": "**For more information, please visit the Wikipedia page.**",
    "error": "Couldn't talk to Wikipedia:\n```%s```"
  }
}