{
  "8ball": {
    "description": "Ask me a question",
    "options": {
      "question": {
        "description": "What do you want my opinion on?"
      }
    },
    "noQuestion": "You didn't ask me anything???",
    "responseList": [
      "As I see it, yes.",
      "It is certain.",
      "It is decidedly so.",
      "Most likely.",
      "Yes.",
      "Yesssss",
      "Yessss Sir.",
      "Yes – definitely.",
      "Your question delights me, my answer is: of course.",
      "You may rely on it.",
      "Outlook good.",
      "Signs point to yes.",
      "Without a doubt.",
      "Ask again later.",
      "Better not tell you now.",
      "Cannot predict now.",
      "Concentrate and ask again.",
      "Reply hazy, try again.",
      "You ask to much.",
      "That's a secret.",
      "Don't count on it.",
      "No",
      "No.",
      "Noooooo!",
      "My reply is no.",
      "My sources say no.",
      "Outlook not so good.",
      "Very doubtful.",
      "I don't think so.",
      "Broooooo, you dummy, your question makes no sense?!"
    ]
  },
  "afk": {
    "description": "sends an afk message if you get pinged until you write again"
  },
  "birthday": {
    "description": "save your birthday and I will send a message on your birthday",
    "options": {
      "set": {
        "description": "set your own birthday",
        "options": {
          "day": {
            "description": "The day you were born."
          },
          "month": {
            "description": "The month you were born."
          },
          "year": {
            "description": "The year you were born."
          }
        }
      },
      "get": {
        "description": "Get a list of the next birthdays",
        "options": {
          "target": {
            "description": "Whose birthday do you want to get? Leave this empty to get the next 10 birthdays."
          },
          "do_not_hide": {
            "description": "Don't hide my response to other users"
          }
        }
      },
      "remove": {
        "description": "Deletes your birthday from the database"
      }
    },
    "months": {
      "01": "January",
      "02": "February",
      "03": "March",
      "04": "April",
      "05": "May",
      "06": "June",
      "07": "July",
      "08": "August",
      "09": "September",
      "10": "October",
      "11": "November",
      "12": "December"
    },
    "saved": "Your birthday has been saved.",
    "removed": "Your birthday has been removed.",
    "getUser": {
      "notFound": "This user has no birthday :(",
      "embedTitle": "{user}'s birthday",
      "date": "This user has birthday on **{month} {day}**.\n",
      "newAge": "He/she will turn **{age}** on this day."
    },
    "getAll": {
      "embedTitle": "The next birthdays",
      "date": "**{month} {day}**\n",
      "notFound": "Nobody has a birthday set..."
    }
  },
  "dm": {
    "description": "sends an user a dm",
    "options": {
      "toggle": {
        "description": "toggles the ability to send you user-made dms",
        "options": {
          "target": {
            "description": "the user you want to toggle; leave this empty to toggle all users (\"*\")."
          }
        }
      },
      "blacklist": {
        "description": "lists all users you are currently blocking."
      },
      "send": {
        "description": "send a dm to a member of this guild",
        "options": {
          "target": {
            "description": "the user you want to send a dm to"
          },
          "message": {
            "description": "the message you want to send, /n for newline"
          },
          "as_mod": {
            "description": "shows 'a mod of [guild]' instead of your name"
          }
        }
      }
    },
    "toggle": {
      "targetAll": {
        "saved": "no one will be",
        "removed": "`all users`"
      },
      "targetOne": {
        "name": "user `{user}`",
        "isnt": "{user} isn't"
      },
      "saved": "Your blacklist entry for {user} has been saved.\nNow {state} able to send you dms by me.\nThis will not prevent guild moderators from sending dms to you.",
      "removed": "Your blacklist entry for {user} has been removed.\nYou can now receive dms created by {user} from me."
    },
    "blacklist": {
      "notFound": "> You are not blocking any users of this guild.",
      "allBlocked": "> You are blocking everyone.",
      "embedTitle": "Your blacklist for the `/dm send` command",
      "embedDescription": "You are blocking the following guild members:\n{members}",
      "embedFooterText": "run '/dm toggle' without arguments to toggle all users and\nrun '/dm toggle' with the 'user_to_toggle' argument to toggle a specific user."
    },
    "send": {
      "targetIsMe": "I cannot send DMs to myself!",
      "permissionDenied": "You are not allowed to send dms to that user!",
      "asModInfo": "\nUse the `as_mod` option to force the message to send.",
      "embedTitle": "You got a message",
      "embedDescription": "From **{user}**\nGuild: {guild}\n\n{msg}",
      "fromMod": "a guild moderator",
      "embedFooterText": "If you don't want to receive user-made dms from me, run '/dm toggle' in any guild.",
      "error": "I couldn't message this member!"
    }
  },
  "fact": {
    "description": "get some facts, they're really cool and usefull, rely on me :D"
  },
  "giveaway": {
    "description": "Giveaway commands",
    "options": {
      "create": {
        "description": "Create a new giveaway",
        "options": {
          "prize": {
            "description": "The prize you are giving away"
          },
          "description": {
            "description": "The giveaway embed description"
          },
          "channel": {
            "description": "The channel this giveaway should be created in"
          },
          "duration": {
            "description": "The giveaway duration: eg. 1w3d2h5min"
          },
          "winner_count": {
            "description": "The number of winners"
          },
          "reaction": {
            "description": "The emoji, users have to react with to participate"
          },
          "thumbnail": {
            "description": "The thumbnail url to use"
          },
          "image": {
            "description": "The image url to use"
          },
          "exempt_members": {
            "description": "A list of members who are not allowed to participate."
          },
          "required_roles": {
            "description": "Only members with one of this roles will be able to participate."
          },
          "bonus_entries": {
            "description": "A list of member/role mentions with the amount of bonus entries: eg. @Premium:5 @Normal:2"
          },
          "embed_color": {
            "description": "The hex color of the embed while the giveaway is running."
          },
          "embed_color_end": {
            "description": "The hex color of the embed after the giveaway has ended."
          }
        }
      },
      "end": {
        "description": "End a running giveaway",
        "options": {
          "id": {
            "description": "The id of the giveaway embed"
          }
        }
      },
      "edit": {
        "description": "Edit a running giveaway",
        "options": {
          "id": {
            "description": "The id of the giveaway embed"
          },
          "add_time": {
            "description": "The number of time added to the giveaway duration. eg. 2h12min or -1h10min"
          },
          "winner_count": {
            "description": "The new number of winners"
          },
          "prize": {
            "description": "The new prize you are giving away"
          },
          "thumbnail": {
            "description": "The new thumbnail url to use"
          },
          "image": {
            "description": "The new image url to use"
          },
          "exempt_members": {
            "description": "Members who are not allowed to participate"
          },
          "required_roles": {
            "description": "Only members with one of this roles will be able to participate."
          },
          "bonus_entries": {
            "description": "A new list of member/role mentions with the amount of bonus entries: eg. @Premium:5 @Normal:2"
          }
        }
      },
      "reroll": {
        "description": "Reroll an ended giveaway",
        "options": {
          "id": {
            "description": "The id of the giveaway embed"
          }
        }
      }
    },
    "managerNotFound": "This feature is disabled or not registered.",
    "notFound": "Your provided message id is not a valid giveaway!",
    "invalidTime": "The provided duration/add_time value is invalid!",
    "notHost": "You are not the host of this giveaway!",
    "buttonLabel": "View Giveaway",
    "started": "The giveaway has started!",
    "ended": "The giveaway has been ended!",
    "edited": "The giveaway has been edited!",
    "rerolled": "The giveaway has been rerolled!",
    "newGiveaway": "🎉🎉 **GIVEAWAY** 🎉🎉",
    "giveawayEnded": "'🎉🎉 **GIVEAWAY ENDED** 🎉🎉",
    "inviteToParticipate": "React with {emoji} to participate!",
    "winMessage": "Congratulations, {winners}! You won **{this.prize}**!",
    "drawing": "Drawing: {timestamp}",
    "dropMessage": "Be the first to react with {emoji}!!",
    "embedFooterText": "{this.winnerCount} winner(s)",
    "noWinner": "Giveaway cancelled, no valid participators.",
    "winners": "Winner(s):",
    "rerollWinners": "🎉 New winner(s): {winners}! Congratulations, you won **{this.prize}**!",
    "rerollNoWinner": "No valid participators, no new winner(s) can be chosen!",
    "endedAt": "Ended at",
    "hostedBy": "Hosted by: {this.hostedBy}"
  },
  "happy": {
    "description": "sends a happy message"
  },
  "image": {
    "description": "Image manipulation",
    "usage": "PREFIX Command: image <subcommand | \"help\"> <args>",
    "options": {
      "type": {
        "description": "The type you want to use. Leave this empty to get a list of types."
      }
    },
    "notFound": "This is not a valid option. ",
    "validOptions": "Valid options are:\n`{options}`",
    "requiresArgs": "This command requires the following args in order:\n\n{args}",
    "error": "An error occurred:\n```{err}```"
  },
  "joke": {
    "description": "sends a funny joke",
    "usage": "PREFIX Command: joke [type]",
    "options": {
      "type": {
        "description": "The type/tag of the joke (not every API supports this)"
      },
      "blacklist": {
        "description": "blacklist specific types/tags",
        "choices": {
          "nsfw": "NSFW",
          "religious": "religious",
          "political": "political",
          "racist": "racist",
          "sexist": "sexist",
          "explicit": "explicit"
        }
      },
      "max_length": {
        "description": "the max length of the joke (not every API supports this)"
      }
    },
    "noAPIAvailable": "Apparently, there is currently no API available. Please try again later.",
    "embedTitle": "Is this funny?"
  },
  "reddit": {
    "description": "reddit related commands",
    "usage": "PREFIX Command: reddit [subreddit] [sort type]",
    "options": {
      "meme": {
        "description": "get a random meme",
        "options": {
          "filter_nsfw": {
            "description": "filters all posts tagged as nsfw. Default: true, Enforced on non-nsfw channels"
          }
        }
      },
      "subreddit": {
        "description": "get one of the top posts of a subreddit",
        "options": {
          "subreddit": {
            "description": "From wich subreddit do you want to get posts? Defaults to a random meme sub."
          },
          "type": {
            "description": "The type to sort for. Default: hot"
          },
          "filter_nsfw": {
            "description": "filters all posts tagged as nsfw. Default: true, Enforced on non-nsfw channels"
          }
        }
      }
    },
    "error": "An error occurred:\n```{err}```",
    "notFound": "No posts matched your search.",
    "embedFooterText": "Upvotes: {upvotes} ({ratio}%) | Downvotes: {downvotes} | Comments: {comments}"
  },
  "sad": {
    "description": "sends a sad emojicon"
  },
  "say": {
    "description": "Let me say something",
    "usage": "PREFIX Command: say <msg> [channel]",
    "options": {
      "msg": {
        "description": "Type your message here, /n for new line"
      },
      "channel": {
        "description": "The channel the message gets sent to"
      }
    },
    "noPerm": "You don't have the permission to send messages in that channel!",
    "noMsgProvided": "You need to provide a message to send!"
  },
  "sleep": {
    "description": "tells your friends that you are going to sleep",
    "responseList": [
      "{user} is tired and goes now to sleep :3",
      "{user} goes now to bed <:engelchen:725458214044303371>",
      "{user} sleeps now, hopefully he/she doesn't snores <:gucken:725670318164672543>"
    ]
  },
  "trigger": {
    "description": "Manage custom responses to message triggers",
    "options": {
      "add": {
        "description": "Add a new trigger",
        "options": {
          "trigger": {
            "description": "the text you want the bot to respond to"
          },
          "response": {
            "description": "the response the bot should send"
          },
          "wildcard": {
            "description": "look for the trigger anywhere in the message (default: true)"
          }
        }
      },
      "delete": {
        "description": "Delete a trigger. This is irreversible!",
        "options": {
          "id": {
            "description": "The trigger id, can be found using \"/trigger get\". Leave this empty to delete the last one."
          }
        }
      },
      "clear": {
        "description": "Delete all triggers. This is irreversible!",
        "options": {
          "confirmation": {
            "description": "Write \"CLEAR ALL\" to confirm the deletion of ALL TRIGGERS."
          }
        }
      },
      "get": {
        "description": "Get one or all triggers",
        "options": {
          "query": {
            "description": "search for a trigger by its trigger content."
          },
          "id": {
            "description": "the trigger id, can be found using \"/trigger get\""
          },
          "short": {
            "description": "return as many triggers as possible"
          }
        }
      }
    },
    "saved": "Added new trigger for `{trigger}`.",
    "idNotFound": "There is no trigger with that ID!",
    "deletedOne": "Deleted the trigger with the ID `{id}`",
    "deletedAll": "I deleted all (`{count}`) triggers.",
    "noneFound": "There are no triggers!",
    "notFound": "No trigger matched your query.",
    "confirmation": "clear all",
    "needConfirm": "You need to confirm this action by writing `CLEAR ALL` in the confirm option!",
    "embedTitle": "Triggers",
    "fieldName": "**Trigger {id}:**",
    "fieldValue": "```\n{trigger}\n```\n**Response:**\n```\n{response}\n```\n**Wildcard: **`{wildcard}`",
    "longEmbedDescription": "ID: {id}\n> Trigger: `{trigger}`\n> Response: `{response}`\n> Wildcard: `{wildcard}`\n\n",
    "shortFieldName": "ID {id}",
    "shortFieldValue": "**Trigger:**\n```\n{trigger}\n```\n**Response:**\n```\n{response}\n```\n**Wildcard: **`{wildcard}`\n",
    "first25": "The first 25 triggers. Get more with the `short` option."
  },
  "vote": {
    "description": "Create a poll for something",
    "usage": "vote <channel> [question] | [option 1] | [option 2] | <option 3> ... <option 9>",
    "options": {
      "question": {
        "description": "What do you want people to vote about?"
      },
      "option_n": {
        "description": "The {num} answer to this poll"
      },
      "type": {
        "description": "What kind of vote do you want?",
        "choices": {
          "normal": "normal",
          "anonymous": "anonymous"
        }
      },
      "channel": {
        "description": "Where should I post the poll?"
      }
    },
    "noPerm": "You don't have the permission to send messages in that channel!",
    "noQuestion": "You need to provide a question for a poll...",
    "notEnoughOptions": "You need to provide at least two options (split them with an `|`) for a poll...",
    "embedTitle": "Poll",
    "embedFooterText": "The creator of this poll can react with ❌ to close the poll.",
    "buttonEmbedFooterText": "The creator of this poll can press the ❌ Button to close the poll.",
    "fieldsQuestion": "Question",
    "fieldsOptions": "Options",
    "ended": "The poll has ended!"
  },
  "wiki": {
    "description": "Search for something on Wikipedia, or get a random page if no search terms were specified.",
    "usage": "wiki <search terms>",
    "options": {
      "query": {
        "description": "What do you want to search?"
      }
    },
    "notFound": "No results found.",
    "visitWiki": "**For more information, please visit the Wikipedia page.**",
    "error": "Couldn't talk to Wikipedia:\n```{err}```"
  }
}