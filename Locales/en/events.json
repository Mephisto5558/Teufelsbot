{
  "cooldown": "This command or one of it's subcommands is on cooldown! Try it again in `{time}`s.",
  "afkMsg": "`{member}` is AFK: {message} - <t:{timestamp}:R>",
  "afkEnd": "Welcome back, I removed your AFK. You have been AFK since <t:{timestamp}>.\nYour AFK message was: \"{message}\"",
  "slashCommandOnly": "This command is only available as a slash command: </{name}:{id}>",
  "guildCommandOnly": "This command is only available in guilds!",
  "economyDisabled": "This command is an economy category command. The economy is not enabled in this guild. To start using the economy, an admin has to run `/economyconfig admin toggle`.",
  "economyNotInitialized": "This command is an economy category command. To start using the economy, run `/economyconfig user start`.",
  "nonBetaCommand": "This command is not a beta command! This bot runs only beta commands.",
  "commandDisabled": "This command has been disabled by the bot dev.",
  "buttonPressOnCooldown": "This button is on cooldown! Try it again in `{time}`s.",
  "strictAutocompleteNoMatch": "Your input must match one of the autocomplete suggestions. Please select one of the available options when entering the slash command.",
  "permissionDenied": {
    "embedTitle": "Insufficient Permissions",
    "embedDescriptionUser": "You need the following permissions in this channel to run this command:\n`{permissions}`",
    "embedDescriptionBot": "I need the following permissions in this channel to run this command:\n`{permissions}`"
  },
  "errorHandler": {
    "embedTitle": "Whoooops",
    "embedDescription": "An unexpected error occurred!\n\nCommand: `{command}`",
    "embedFooterText": "Reporting this error will send the command options privately to the dev.",
    "reportButton": "Report this Error",
    "reportButtonDisabled": " (Disabled due to dev version)",
    "discordAPIErr": "A Discord API Error occurred, please try again and message the dev if this keeps happening.",
    "alreadyReported": "This error has already been reported. [Link]({url}).\nIt will be fixed soon.",
    "reportSuccess": "The error has been reported. [Link]({url})",
    "reportFail": "`An error occurred while trying to send your error report.\n```\n{err}\n```\nPlease message the dev directly."
  },
  "notAllowed": {
    "member": "You are not allowed to run this command (set by a server administrator)!",
    "channel": "It is not allowed to run this command in this channel (set by a server administrator)!",
    "role": "One of your roles is not allowed to run this command (set by a server administrator)!"
  },
  "nsfwCommand": "You cannot run NSFW Commands in a non NSFW Channel!",
  "counting": {
    "error": "YOU RUINED IT AT **{lastNumber}**!! The next number is **1**.\n",
    "wrongNumber": "**Can't you count?! Wrong number.**",
    "sameUserTwice": "**You can't count two numbers in a row!**"
  },
  "selfrole": {
    "embedTitle": "Self Role",
    "roleNotFound": "The role bound to this button was not found!",
    "noPermMember": "I don't have the permission to manage your roles!",
    "noPermRole": "I don't have the permission to manage the <@&{role}> role!",
    "hasRoleAlready": "You already have the <@&{role}> role!",
    "addSuccess": "I gave you the <@&{role}> role.",
    "missesRole": "I can't remove your <@&{role}> role because you don't have it!",
    "removeSuccess": "I removed your <@&{role}> role."
  },
  "infoCMDs": {
    "emojis": {
      "embedTitle": "Delete Emoji",
      "notFound": "The emoji could not be found.",
      "noPerm": "I do not have permission to delete emojis!",
      "success": "The emoji has been successfully deleted."
    },
    "roles": {
      "embedTitle": "Delete Role",
      "notFound": "The role could not be found.",
      "noPerm": "I do not have permission to delete that role!",
      "success": "The role has been successfully deleted."
    },
    "members": {
      "embedTitle": "Kick/Ban Member",
      "notFound": "The member could not be found.",
      "modalTitle": "Reason",
      "modalTextLabel": "Please specify the reason for kicking/banning the member."
    }
  },
  "logger": {
    "someone": "someone",
    "executor": "Deleted by",
    "reason": "Reason",
    "embeds": "{count} Embeds",
    "messageDelete": {
      "embedDescription": "A message was deleted by {executor} in {channel}.",
      "content": "Message Content",
      "author": "Author",
      "components": "{count} Components"
    },
    "messageDeleteBulk": {
      "embedDescription": "{count} messages were deleted by {executor} in {channel}."
    },
    "messageUpdate": {
      "embedDescription": "{executor} edited a message in {channel}.",
      "oldContent": "Original Message",
      "newContent": "New Message",
      "author": "Author",
      "messageLink": "Message",
      "unknown": "Unknown"
    },
    "voiceStateUpdate": {
      "embedDescriptionJoin": "{executor} joined the voice channel {newChannel}.",
      "embedDescriptionLeave": "{executor} left the voice channel {oldChannel}.",
      "embedDescriptionMove": "{executor} switched from voice channel {oldChannel} to {newChannel}.",
      "oldChannel": "Previous Channel",
      "newChannel": "Current Channel",
      "unknown": "`unknown`"
    },
    "sayCommandUsed": {
      "embedDescription": "{executor} used a command in {channel} that makes the bot send a message.",
      "content": "Message Content",
      "author": "Author",
      "messageLink": "Message"
    }
  }
}