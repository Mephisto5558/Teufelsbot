{
  "addemoji": {
    "description": "adds an emoji to this guild",
    "options": {
      "emoji_or_url": {
        "description": "provide an emoji or a url to a picture."
      },
      "name": {
        "description": "the name of the new emoji"
      },
      "limit_to_roles": {
        "description": "the role(s) that is/are allowed to use the emoji. Separate them with spaces."
      }
    },
    "embedTitle": "AddEmoji",
    "isGuildEmoji": "That emoji is already on this guild!",
    "invalidUrl": "The provided argument is not a valid url or emoji!\nThe url must end with `jpg`, `jpeg`, `png`, `webp`, `svg` or `gif`.\nExample: https://www.google.com/images/branding/googlelogo/1x/googlelogo_dark_color_272x92dp.png",
    "notFound": "The provided url was not found.",
    "success": "Successfully added **{name}** {emoji}!\n",
    "limitedToRoles": "The emoji has been limited to the following roles:\n<@&{roles}>.",
    "error": "Unable to create the emoji for reason:\n```\n{err}\n```",
    "timedOut": "The request timed out. Maybe the image is to large."
  },
  "autopublish": {
    "description": "automatically publishes everything anyone in any announcement channel says",
    "usage": "This command publishes all messages sent in announcement channels automatically.\nThis is a toggle.",
    "success": "{toggle} autopublishing."
  },
  "button": {
    "description": "Create a button.",
    "options": {
      "json": {
        "description": "create a button from raw JSON data",
        "options": {
          "json": {
            "description": "JSON data to create a button from"
          }
        }
      },
      "custom": {
        "description": "create your own button with a bunch of options",
        "options": {
          "style": {
            "description": "What style should your button have?",
            "choices": {
              "1": "Blurple",
              "2": "Grey",
              "3": "Green",
              "4": "Red",
              "5": "Link (Requires the \"url\" option)"
            }
          },
          "emoji": {
            "description": "The emoji you want to show on the button. Gets overwritten by the \"label\" option."
          },
          "label": {
            "description": "The text you want to show on the button. Overwrites the \"emoji\" option."
          },
          "url": {
            "description": "The url the button points to. Works only with \"Link\" style option."
          },
          "new_row": {
            "description": "Use a new row for the button."
          },
          "content": {
            "description": "Set a message to the button message."
          },
          "message_id": {
            "description": "The message you want to add a button to. Needs to be in the same channel as the command."
          }
        }
      }
    },
    "invalidURL": "The provided URL is invalid!",
    "msgNotFound": "The message id you provided was not found in this channel!",
    "botIsNotAuthor": "I can only edit my own messages!",
    "buttonLimit": "A message cannot have more then 5 rows or 25 buttons!",
    "invalidOption": "**One of your options is invalid!**\n\n```{err}```",
    "invalidJSON": "**Your JSON is invalid!**\n\n```{err}```",
    "successJSON": "Your button has been sent!",
    "success": "Your button has been sent! Below is the button code.\nIf you want to send it again, use the `json` subcommand.\n\n```json\n{json}\n```"
  },
  "convert": {
    "description": "Converts one type of text to another",
    "options": {
      "input": {
        "description": "the text you want to convert"
      },
      "convert_to": {
        "description": "the output type",
        "choices": {
          "binary": "Binary",
          "decimal": "Decimal",
          "hex": "Hexadecimal",
          "morse": "Morse Code",
          "octal": "Octal",
          "text": "Text"
        }
      },
      "is_octal": {
        "description": "Set this to true if your input is octal or else it will be recognized as decimal."
      },
      "with_spaces": {
        "description": "Do you want to have spaces between the letters? Default: false"
      },
      "convert_spaces": {
        "description": "Do you want to also convert spaces? Default: true"
      },
      "convert_letters_and_digits_only": {
        "description": "Do you want to convert only letters and digits? Default: false"
      }
    },
    "success": "```Converted {inputType} to {outputType}: ```\n"
  },
  "embed": {
    "description": "sends a custom embed; you can do newlines with \"/n\".",
    "options": {
      "custom": {
        "description": "create your own embed with a bunch of options",
        "options": {
          "description": {
            "description": "set the embed text, use \"/n\" for newlines"
          },
          "content": {
            "description": "set a message outside of the embed"
          },
          "title": {
            "description": "set the embed title"
          },
          "predefined_color": {
            "description": "set the embed color from predefined discord codes"
          },
          "custom_color": {
            "description": "set a custom 6-char HEX Code as embed color (e.g. #ffffff)"
          },
          "footer_text": {
            "description": "set the footer text"
          },
          "footer_icon": {
            "description": "set the footer icon URL"
          },
          "image": {
            "description": "set the embed image URL"
          },
          "thumbnail": {
            "description": "ste the thumbnail URL"
          },
          "timestamp": {
            "description": "set the timestamp"
          },
          "author_name": {
            "description": "set the author name"
          },
          "author_url": {
            "description": "set the author URL"
          },
          "author_icon": {
            "description": "set the author icon URL"
          }
        }
      },
      "json": {
        "description": "create an embed from raw JSON data",
        "options": {
          "json": {
            "description": "JSON data to create an embed from"
          }
        }
      }
    },
    "invalidOption": "**One of your options invalid!**\n\n```{err}```",
    "invalidJSON": "**Your JSON is invalid!**\n\n```{err}```",
    "successJSON": "Your embed has been sent!",
    "success": "Your embed has been sent! Below is the embed code.\nIf you want to send it again, use the `json` subcommand.\n\n```json\n{json}\n```"
  },
  "hash": {
    "description": "encrypts or decrypts your text with various methods",
    "usage": "SLASH Command: You only need to provide one method option.",
    "options": {
      "input": {
        "description": "the text you want to encrypt or decrypt"
      },
      "method": {
        "description": "with which method your text should get encrypted"
      }
    },
    "embedTitle": "Hash Function",
    "embedDescription": "Your input: `{input}`\nHash method: `{method}`",
    "text": "Your hashed string:\n`{hash}`"
  },
  "lastping": {
    "description": "Shows you where you got last mentioned.",
    "usage": "PREFIX Command: lastping [#channel]\nIf the `channel` option is used, a maximum of 200 messages will be searched.",
    "options": {
      "channel": {
        "description": "The channel you want to look for mentions in. Defaults to the whole guild."
      },
      "member": {
        "description": "Search only for mentions by a specific member? (Only in combination with the \"channel\" option)"
      }
    },
    "memberRequiresChannel": "The \"member\" option only works in combination with the \"channel\" option!",
    "invalid": "The selected channel is not a text channel!",
    "noneFound": "I haven't found any mentions.",
    "unknown": "unknown",
    "embedTitle": "Last Ping",
    "embedDescription": "The last time you were mentioned was [here]({url}) from <@{author}>.\n>>> {content}"
  },
  "math": {
    "description": "Runs some math",
    "usage": "math [expression]",
    "options": {
      "expression": {
        "description": "What do you want me to solve?"
      }
    },
    "embedTitle": "Calculator",
    "noInput": "You have not given any input!",
    "help": "Help and Information\n\nThis calculator supports many mathematic operations, not only the basic ones.\nYou can use variables like this: `x=10`.\nYou can use multiple statements by using a new line or a `;`. `x=10;x+10` returns `20`.\nYou need to use `*` for multiplying.\nThe calculator suppots outputting multiple results.\nSometimes unnecessary spaces are making the expression error.",
    "error": "An error occurred while trying to solve your expression:\n```{err}```",
    "separated": "Results separated with \"|\":\n{results}",
    "success": "Expression:\n```{expression}```\nResult:\n```{result}```"
  },
  "passwordgenerator": {
    "description": "generates a cryptographically strong password",
    "options": {
      "length": {
        "description": "the length of your password"
      },
      "count": {
        "description": "How many passwords do you want to generate?"
      },
      "exclude_chars": {
        "description": "characters you won't have in your password"
      },
      "include_chars": {
        "description": "characters you want to have in your password, additional to the default charset."
      }
    },
    "charsetEmpty": "you excluded all chars of the charset...",
    "success": "Your secure password(s):\n{passwords}\n\n||Created with the following charset:\n```{charset}```\nUse the command options to add or remove chars.||"
  },
  "record": {
    "description": "Record a voice channel. Needs approval from users.",
    "options": {
      "target": {
        "description": "Record only one specific user."
      },
      "channel": {
        "description": "Wich voice channel do you want to record?"
      },
      "public": {
        "description": "Make the recording public, so any guild member can hear it."
      }
    },
    "noTarget": "There is no one to record! Either all targets are bots or they are not in a voice channel! If you supplied a channel, make sure it is the one the target is in!",
    "needVoiceChannel": "You need to supply a voice channel or be in one!",
    "cannotJoin": "I can not join that voice channel! Make sure the channel is not full and I have the needed permissions.",
    "deaf": "I am currently deafened and i cannot undeaf myself!",
    "embedTitle": "VoiceRecorder",
    "embedDescription": "<@{user}> wants to record you in voice channel <#{channel}>.\n**{publicOrPrivate}**\nPlease press a button to allow or deny the recording of your voice.",
    "isPublic": "This recording will be available to every member of the guild.",
    "isPrivate": "This recording will be only available for the current members of the voice channel that allowed the recording.",
    "cantConnect": "I could not connect to the voice channel! Please try again.",
    "denied": "No one wants to get recorded.",
    "allow": "Allow Recording",
    "deny": "Deny Recording",
    "pause": "Pause Recording",
    "resume": "Resume Recording",
    "stop": "Stop Recording",
    "get": "Get the Recording",
    "updated": "Your response has been set to `{permission}`. I am waiting for the other members to reply.",
    "paused": "🔇 I paused recording {channel}.",
    "recording": "🎙️ I am now recording {channel} ({users})!",
    "notFound": "Your recording has not been found!",
    "privateReady": "Press the button to get the recording.",
    "success": "🔉 Here is your recording!"
  },
  "timestamp": {
    "description": "Get a timestamp for the future (or past by putting a \"-\" in front)",
    "usage": "PREFIX Command: timestamp [time]",
    "options": {
      "time": {
        "description": "The time from now (eg. 1w3d2h5min): 3min returns now+3min, -3min returns now-3min"
      }
    },
    "invalid": "The time you provided is invalid! Use {command} and search for `timestamp` for mor information.",
    "outOfRange": "The time you provided is greater than 200,000 years!",
    "success": "That's <t:{time}:R> (`<t:{time}:R>`)."
  }
}